<b>Syntax:</b><br>
<pre>
{define name=define-to-set}value{/define}
{define tag=tag-to-create}value{/define}
{define container=container-to-create}value{/define}
</pre>
<p>
<b>Attributes</b>
<p>
<dl compact>
<dt><kbd>name=...</kbd>
<dd>Set the specified define to the value inside the container</dd>
<dt><kbd>if=..</kbd>
<dd>Defines a new if argument, or overrides the previous definition</dd>
<dt><kbd>tag=..</kbd>
<dd>Defines a new RXML tag, or overrides the previous definition</dd>
<dt><kbd>containers=..</kbd>
<dd>Defines a new RXML container, or overrides the previous definition</dd>
<dt><kbd>default_<i>attribute</i>=<i>value</i></kbd>
<dd>If no value for <i>attribute</i> is defined when the tag is used, <i>value</i> will be the one returned from <i>&amp;attribute;</i>, see below.
</dl>
<p> 

For tags and containers you can use a few special tokens in the definition:

<dl compact>
<dt><kbd>#args#</kbd>

<dd>All arguments sent to the tag, as a string. Useful when defining
new tags that are more or less only an alias for old ones:<br>
<pre>
{define container=h1}
  {gtext 1 #args#}{contents}{/gtext}
{/define}
</pre>
<p>
<dt><kbd>&lt;contents&gt;</kbd>
<dd>In containers only: This inserts the contents of the container

<dt><kbd>&amp;argument;</kbd>
<dd>Inserts the value of the argument 'argument'. This also works in
'if's. Example:<br> 

<pre> {define tag=test}
  The test tag: Testing testing. Value1 is &amp;value1;, value2 is &amp;value2;
{/define}

{define if=always-true}
  {true}
{/define}

{define if=always-false}
  {false}
{/define}

{test value1=foo value2=bar}
</pre>

<dt><kbd>&amp;tagname::argument;</kbd> and <kbd>&amp;::argument;</kbd>
<dd>The definition of 'argument' in the last called 'tagname', or the
previous definition of 'argument'. Useful in tags that use other
userdefined tags. This can not be used in 'if' argument defenitions.
</dl>
<p>
<b>See also:</b> {undefine help} {set help} {insert help} {use help}
