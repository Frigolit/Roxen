Diagram info:

Huvud-funktioner:
create_graph(mapping diagra_data);
create_bars(mapping diagra_data);
create_sumbars(mapping diagra_data);
create_pie(mapping diagra_data);


Graphs: 
Graphs är punkter eller punkter med linjer mellan sig. Punkterna anges
med x, y.
Indata på formen x, y, y, y omvandlas.

Data lagras i ett data-mapping:
diagram_data

//behöver man följande två?
string typ;
Är lika med "graph", "bars", "sumbars", "pie";

string subtyp;
//för "bars" kan den vara "line"(vågräta linjer), "bars", "dot", "linear", 
//"quadratic", "cubic" (Fixa stavningen!)


array(array(float)) datapoints; 
//Innehåller för graph 
 // en array med x-data-array, y-data-array, x-data-array, ...


array(string) labels;
//Innehåller en array med ({xstorhet, ystorhet, xenhet, yenhet})

array(string) xnames;
//Innehåller en array med olika namn som ska stå längs x-axeln 
//(t ex jan, feb).

array(string) ynames;
//Innehåller en array med olika namn som ska stå längs y-axeln (t ex
//lite, mycket).

array(object(image)) xnamesimg;
array(object(image)) ynamesimg;
//bilderna på x- och ynames.

int xmaxxnames;
int ymaxxnames;
int xmaxynames;
int ymaxynames;
//Anger max-storleken på text-bilderna.

int fontsize;
//anger med vilken storlek texten ska skrivas

int labelsize;
// anger med vilken storlek texten för labels ska skrivas
// Denna ska sättas till 0 om det inte finns några labels!!!

array(froat) values_for_xnames;
//Innehåller en array med nivåerna som ska förknippas med vissa xnames.
//Om dessa inte anges kan de sättas ut jämt.

array(froat) values_for_ynames;
//Innehåller en array med nivåerna som ska förknippas med vissa ynames.
//Om dessa inte anges kan de sättas ut jämt.

float xmaxvalue, xminvalue, ymaxvalue, yminvalue;
//anger inom vilka områden man ska förvänta sig data. Minvalue sätts
//i normala fall till min(0, minsta_värde) och maxvalue till 
//max(0, största_värde).


float xspace, float yspace, 
//anger hur lång det ska var mellan utskrifterna av nuffror/xnames/ynames

int xsize, ysize;
//anger hur stor bild man ska generera.

"graph":image-object, 
"xstart": var_i_bilden_vi_kan_börja_rita_data-int, //från höger
"ystart": var_i_bilden_vi_kan_börja_rita_data-int, //Nerifrån!
"xstop":int, //från höger
"ystop":int //Nerifrån!
"bgcolor":({int r, int g, int b}) 
//färgen på bakgrunden i bilden
//Om bgcolor är 0 så är det bilden:

"axcolor":({int r, int g, int b}) 
//Färgen på axlarna

"datacolors":({({int r, int g, int b}), ... }) 
//Färgen på linjerna/barsen/slicerna
//För grapher måste de vara av samma antal som antalet uppsättningar data

"bgimage": object(image) 
// som ska användas som bakgrundsbild.

"textcolor":({int r, int g, int b})
// färgen på texten

"labelcolor":({int r, int g, int b})
// färgen på labelstexten (default är textcolor):({int r, int g, int b})

"orient":"hor" eller "vert"
//Anger om skriften på x-axel ska skrivas horizontelt eller vertikalt.

"linewidth":float bredd på ala linjer


"image":object(image)
//bilden som grafen ritas i.

