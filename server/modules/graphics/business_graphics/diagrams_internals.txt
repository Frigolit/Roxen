Diagram info:

Huvud-funktioner:
create_graph(mapping diagram_data);
create_bars(mapping diagram_data);
create_sumbars(mapping diagram_data);
create_pie(mapping diagram_data);


Graphs: 
Graphs är punkter eller punkter med linjer mellan sig. Punkterna anges
med x, y.
Indata på formen x, y, y, y omvandlas av inläsningsfunktionen.

Bars:
Barsdata består av en lista av listor med värden i. Värdena skrivs
ut som staplar eller negativa staplar.

Data lagras i ett data-mapping:
diagram_data


string type;
//Är lika med "graph", "bars", "sumbars", "pie";

string subtype;
//Är alltid "line" för graph-er. Tänkbara för bars är "line", "dot", "box"  
//Är "pie" för tårtor?

//Följande gäller för bars-line och graph-diagram
string drawtype;
 "level"; //Om !=0 så är bars-diagrammet bara vågräta streck 
 "linear"; //Om !=0 så är bars/graph-diagrammet linjärt spline (default)
 "quadratic"; //Om !=0 så är bars/graph-diagrammet kvadratiskt spline
 "cubic";//Om !=0 så är bars/graph-diagrammet kubiskt spline 
 //För bars-box och pie:
 "2D" - ritar 2D boxar/kakor
 "3D" - flash!!!

int tone;
  //Anger om skuggning ska ske
 
float|int 3Ddepth;
//Anger hur djup 3D ska vara i pixel

array(array(float)) data; 
//Innehåller för graph 
 // en array med arrayer av typ x-pos1, y-pos1, x-pos2, ...
//För Bars:
 // x-data1, x-data2, ...
//För pie:
 // value1, value2, ... 


array(string) labels;
//Innehåller en array med ({xstorhet, ystorhet, xenhet, yenhet})
// För bars kan används inte xenhet

array(string) xnames;
//Innehåller en array med olika namn som ska stå längs x-axeln 
//(t ex jan, feb).


array(string) ynames;
//Innehåller en array med olika namn som ska stå längs y-axeln (t ex
//lite, mycket).
// Dessa namn skrivs i diagrammet av create_pie.


array(object(image)) xnamesimg;
array(object(image)) ynamesimg;
//bilderna på x- och ynames.

int xmaxxnames;
int ymaxxnames;
int xmaxynames;
int ymaxynames;
//Anger max-storleken på text-bilderna.

int fontsize;
//anger med vilken storlek texten ska skrivas

int labelsize;
// anger med vilken storlek texten för labels ska skrivas
// Denna ska sättas till 0 om det inte finns några labels!!!

int legendfontsize;
//Anger storleken på legend-texten.
// (Default fontsize)
//Om den är för stor minskas den. 

int legend_size;
//Storleken på legenden.

array(string) legend_texts;
// innehåller texten som ska stå i Legenden.
// Det ska vara en text per data
// Är 0 om ingen text ska skrivas ut.
array(froat) values_for_xnames;
//Innehåller en array med nivåerna som ska förknippas med vissa xnames.
//Om dessa inte anges kan de sättas ut jämt.
//Bars sätter denna själv
// Dessa namn är de som används av pie-diagramet för legenden.


array(froat) values_for_ynames;
//Innehåller en array med nivåerna som ska förknippas med vissa ynames.
//Om dessa inte anges kan de sättas ut jämt.

float xmaxvalue, xminvalue, ymaxvalue, yminvalue;
//anger inom vilka områden man ska förvänta sig data. Minvalue sätts
//i normala fall till min(0, minsta_värde) och maxvalue till 
//max(0, största_värde).


float xspace, float yspace, 
//anger hur lång det ska vara mellan utskrifterna av nuffror/xnames/ynames

int xsize, ysize;
//anger hur stor bild man ska generera.

"graph":image-object, 
"xstart": var_i_bilden_vi_kan_börja_rita_data-int, //från höger
"ystart": var_i_bilden_vi_kan_börja_rita_data-int, //Nerifrån!
"xstop":int, //från höger
"ystop":int //Nerifrån!

"legendcolor":({int r, int g, int b}) 
//bgfärgen på bakgrunden i legenden
//Om legendcolor är 0 så är det bilden:

"legendimage": object(image) 
// som ska användas som bakgrundsbild.

"bgcolor":({int r, int g, int b}) 
//färgen på bakgrunden i bilden
//Om bgcolor är 0 så är det bilden:

"bgimage": object(image) 
// som ska användas som bakgrundsbild.

"axcolor":({int r, int g, int b}) 
//Färgen på axlarna och på outlines i pie

"datacolors":({({int r, int g, int b}), ... }) 
//Färgen på linjerna/barsen/slicerna
//För grapher och bars måste de vara av samma antal som antalet 
//uppsättningar data


"textcolor":({int r, int g, int b})
// färgen på texten

"labelcolor":({int r, int g, int b})
// färgen på labelstexten (default är textcolor):({int r, int g, int b})

"orient":"hor" eller "vert"
//Anger om skriften på x-axel ska skrivas horizontelt eller vertikalt.
//hor är default.

"linewidth":float bredd på alla linjer

"grindwidth":float bredd på alla linjer i grinden

"vertgrind": int om denna är så blir det vertikala grind

"horgrind": int om denna är så blir det horizontella grind

"image":object(image)
//bilden som grafen ritas i.

